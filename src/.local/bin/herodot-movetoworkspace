#!/bin/sh

usage() {
    cat << EOF
Usage:  herodot movetoworkspace set back|next|home|last [silent]
EOF
    exit 1
}

WORKSPACES=$(hyprctl workspaces -j)
CLIENT=$(hyprctl activewindow -j)

CLIENT_WORKSPACE=$(echo "$CLIENT" | jq ".workspace.id")
CLIENT_MONITOR=$(echo "$CLIENT" | jq ".monitor")

HOME_WORKSPACE=$(echo "$WORKSPACES" | jq --arg monitorID "$CLIENT_MONITOR" 'map(select(.monitorID | tostring == $monitorID)) | min_by(.id) | .id')
LAST_WORKSPACE=$(echo "$WORKSPACES" | jq --arg monitorID "$CLIENT_MONITOR" 'map(select(.monitorID | tostring == $monitorID)) | max_by(.id) | .id')

CLIENT_COUNT=$(echo "$WORKSPACES" | jq --argjson monitorID "$CLIENT_MONITOR" --argjson id "$CLIENT_WORKSPACE" '.[] | select(.monitorID == $monitorID and .id == $id) | .windows')

SILENT=$([ "$3" = "silent" ] && echo "silent")

movetoworkspace() {
    hyprctl dispatch "movetoworkspace$SILENT" "$1"
}

case "$1" in
    "set")
        case "$2" in
            "back")
                movetoworkspace $([ "$CLIENT_WORKSPACE" = "$HOME_WORKSPACE" ] && echo "r-1" || echo "m-1")
                ;;
            "next")
                [ "$CLIENT_WORKSPACE" = "$LAST_WORKSPACE" ] && [ "$CLIENT_COUNT" -eq 1 ] && exit 1
                movetoworkspace $([ "$CLIENT_WORKSPACE" = "$LAST_WORKSPACE" ] && echo "r+1" || echo "m+1")
                ;;
            "home")
                movetoworkspace "r~1"
                ;;
            "last")
                [ "$CLIENT_WORKSPACE" -ne "$LAST_WORKSPACE" ] && movetoworkspace "r~$LAST_WORKSPACE"
                ;;
            *)
                usage
                ;;
        esac
        ;;
    *)
        usage
        ;;
esac

