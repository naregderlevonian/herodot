#!/bin/sh

usage() {
    cat << EOF
Usage:  herodot paper get state|mode
        herodot paper set state off|on|toggle [save] 
        herodot paper set mode back|next [save]
        herodot paper set resume
EOF
    exit 1
}

PROCESS="hyprpaper"
MONITOR="eDP-1"
PAPER_PATH="$HOME/.config/hypr/papers/*"
PAPERS=($(ls -d $PAPER_PATH))

load_state() {
    herodot settings read "environment.paper.isEnabled"
}

save_state() {
    herodot settings assign "environment.paper.isEnabled" "$1"
}

load_mode() {
    herodot settings read "environment.paper.mode"
}

save_mode() {
    herodot settings assign "environment.paper.mode" "$1"
}

is_enabled() {
    pgrep "$PROCESS" > /dev/null 2>&1
    return $?
}

get_state() {
    is_enabled
    [ $? -eq 0 ] && echo "true" || echo "false"
}

get_mode() {
    is_enabled
    [ $? -eq 0 ] && hyprctl hyprpaper listactive | sed 's/ =/,/' | head -n 1
}

apply() {
    waynot send "Paper" "set to $(basename "$1")"

    on

    hyprctl hyprpaper preload "$1"; hyprctl hyprpaper wallpaper "$MONITOR, $1"
}

set_mode() {
    [ "$SAVE" -eq 1 ] && {
        save_state "true";
        save_mode "$1";
    }

    apply "$1"
}

navigate() {
    local offset="$1"
    for i in "${!PAPERS[@]}"; do
        if [ "${PAPERS[$i]}" = "$(load_mode)" ]; then
            set_mode "${PAPERS[$(( (i + offset + ${#PAPERS[@]}) % ${#PAPERS[@]} ))]}"
            return
        fi
    done
}

back() {
    is_enabled
    [ $? -eq 0 ] || on
    navigate "-1"
}

next() {
    is_enabled
    [ $? -eq 0 ] || on
    navigate "+1"
}

off() {
    waynot send "Paper" "off"
    killall $PROCESS

    [ "$SAVE" -eq 1 ] && {
        save_state "false";
    }
}

on() {
    $PROCESS &
}

toggle() {
    is_enabled
    [ $? -eq 0 ] && off; exit
    on
    resume
}

resume() {
    [ "$(load_state)" = "false" ] && {
        off;
        exit;
    }
    set_mode "$(load_mode)"
}

case "$1" in
    "get")
        case "$2" in
            "state")
                get_state
                ;;
            "mode")
                get_mode
                ;;
            *)
                usage
                ;;
        esac
        ;;
    "set")
        SAVE=0
        [ "$4" = "save" ] && SAVE=1

        case "$2" in
            "state")
                case "$3" in
                    "off")
                        off
                        ;;
                    "on")
                        on
                        ;;
                    "toggle")
                        toggle
                        ;;
                    *)
                        usage
                        ;;
                esac
                ;;
            "mode")
                case "$3" in
                    "back")
                        back
                        ;;
                    "next")
                        next
                        ;;
                    *)
                        usage
                        ;;
                esac
                ;;
            "resume")
                resume
                ;;
            *)
                usage
                ;;
        esac
        ;;
    *)
        usage
        ;;
esac

