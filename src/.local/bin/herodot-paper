#!/bin/sh

usage() {
    cat << EOF
Usage:  herodot paper get state|mode
        herodot paper set state off|on|toggle [save] 
        herodot paper set mode back|next [save]
        herodot paper set mode {paper} [save]
        herodot paper set restore
EOF
    exit 1
}

PROCESS="hyprpaper"
PAPERS_PATH="$HOME/.config/hypr/papers"
PAPERS=($(ls "$PAPERS_PATH" | grep -v "current" | sort))

apply_decoration_settings() {
    hyprctl keyword "decoration:blur:enabled" false
    hyprctl keyword "decoration:fullscreen_opacity" 1
    hyprctl keyword "decoration:active_opacity" 1
    hyprctl keyword "decoration:inactive_opacity" 1
}

check_paper_exists() {
    local paper="$1"
    if [ ! -d "$PAPERS_PATH/$paper" ]; then
        echo "Paper [$paper] not found."
        exit 1
    fi
}

is_enabled() {
    pgrep "$PROCESS" > /dev/null 2>&1
    return $?
}

restart() {
    killall $PROCESS
    hyprctl reload
    $PROCESS > /dev/null 2>&1
}

refresh_symlink() {
    rm -r "$PAPERS_PATH/current"
    ln -s "$PAPERS_PATH/$1" "$PAPERS_PATH/current"
}

restore() {
    [ "$(load_state)" = "false" ] && { off; exit 0; }
    set_mode "$(load_mode)"
}

load_state() {
    herodot settings read "paper.isEnabled"
}

load_mode() {
    herodot settings read "paper.mode"
}

save_state() {
    herodot settings assign "paper.isEnabled" "$1"
}

save_mode() {
    herodot settings assign "paper.mode" "$1"
}

get_state() {
    is_enabled
    [ $? -eq 0 ] && echo "true" || echo "false"
}

get_mode() {
    echo "$(basename "$(readlink -f "$PAPERS_PATH/current")")"
}

set_mode() {
    local paper="$1"

    check_paper_exists "$paper"

    waynot send "Paper" "set to $paper"
    refresh_symlink "$paper"
    restart

    [ "$SAVE" -eq 1 ] && {
        save_state "true"
        save_mode "$paper";
    }
}

off() {
    waynot send "Paper" "turned off"
    killall $PROCESS

    apply_decoration_settings

    [ "$SAVE" -eq 1 ] && {
        save_state "false"
    }
}

on() {
    set_mode "$(load_mode)"
}

toggle() {
    is_enabled
    [ $? -eq 0 ]  && off || on
}

navigate() {
    local offset="$1"

    for i in "${!PAPERS[@]}"; do
        if [ "${PAPERS[$i]}" = "$(get_mode)" ]; then
            set_mode "${PAPERS[$(( (i + offset + ${#PAPERS[@]}) % ${#PAPERS[@]} ))]}"
            return
        fi
    done
}

back() {
    is_enabled
    [ $? -eq 0 ] && navigate "-1" || on
}

next() {
    is_enabled
    [ $? -eq 0 ] && navigate "+1" || on
}

SAVE=0
[ "$4" = "save" ] && SAVE=1

case "$1" in
    "get")
        case "$2" in
            "state")
                get_state
                ;;
            "mode")
                get_mode
                ;;
            *)
                usage
                ;;
        esac
        ;;
    "set")
        case "$2" in
            "state")
                case "$3" in
                    "off")
                        off
                        ;;
                    "on")
                        on
                        ;;
                    "toggle")
                        toggle
                        ;;
                    *)      
                        usage
                        ;;
                esac
                ;;
            "mode")
                case "$3" in
                    "back")
                        back
                        ;;
                    "next")
                        next
                        ;;
                    *)
                        set_mode "$3"
                        ;;
                esac
                ;;
            "restore")
                restore
                ;;
            *)      
                usage
                ;;
        esac
        ;;
    *)
        usage
        ;;
esac
