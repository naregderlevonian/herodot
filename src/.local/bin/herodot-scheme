#!/bin/sh

usage() {
    cat << EOF
Usage:  herodot scheme set mode {scheme}
        herodot scheme set mode back|next
EOF
}

SCHEMES=(
    van
    yerevan
)

paths=(
"$HOME/.config/dunst"
"$HOME/.config/gtk-3.0"
"$HOME/.config/hypr"
"$HOME/.config/kitty"
"$HOME/.config/mc"
"$HOME/.config/nvim/lua/config"
"$HOME/.config/tofi"
)

get_mode() {
    echo "$(herodot settings read "interface.scheme")"
}

replace_scheme() {
    for path in "${paths[@]}"; do
        echo "$path $1 $2"
        if [ -d "$path" ]; then
            find "$path" -type f -exec sed -i "s/$1/$2/g" {} +
            find "$path" -type l -exec sh -c 'ln -sf "$(readlink "{}" | sed "s/'"\/$1"'/'"\/$2"'/g")" "{}"' \;
        fi
    done
}

set_mode() {
    replace_scheme "$(get_mode)" "$1"
    
    eval "$(dbus-launch)"

    herodot settings assign "interface.scheme" "$1"
    waynot send "Scheme" "set to $1"
}

navigate() {
    local offset="$1"

    for i in "${!SCHEMES[@]}"; do
        if [ "${SCHEMES[$i]}" = "$(get_mode)" ]; then
            set_mode "${SCHEMES[$(( (i + offset + ${#SCHEMES[@]}) % ${#SCHEMES[@]} ))]}"
            return
        fi
    done
}

back() {
    navigate "-1"
}

next() {
    navigate "+1"
}

case "$1" in
    "set")
        case "$2" in
            "mode")
                case "$3" in
                    "back")
                        back
                        ;;
                    "next")
                        next
                        ;;
                    *)
                        [ -z "$3" ] && usage
                        set_mode "$3"
                        ;;
                esac
                ;;
            *)
                usage
                ;;
        esac
        ;;
    *)
        usage
        ;;
esac

